name: Deploy Hugo site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Hugo (extended via API discovery)
        env:
          HUGO_VERSION: "0.150.0" # 如该版本资产缺失，可改成 0.149.0 或 0.148.2 试下
        run: |
          set -euo pipefail

          # 工具
          sudo apt-get update -y
          sudo apt-get install -y jq

          VER="${HUGO_VERSION}"
          API="https://api.github.com/repos/gohugoio/hugo/releases/tags/v${VER}"

          echo "Fetching asset list for Hugo v${VER}…"
          if [ -n "${GITHUB_TOKEN-}" ]; then
            curl -fsSL -H "Authorization: Bearer ${GITHUB_TOKEN}" "$API" -o /tmp/hugo.json
          else
            curl -fsSL "$API" -o /tmp/hugo.json
          fi

          if ! jq -e . >/dev/null 2>&1 </tmp/hugo.json; then
            echo "Failed to get release JSON:"
            cat /tmp/hugo.json || true
            exit 1
          fi

          # 优先选 tar.gz，其次 .deb；要求：extended + linux + amd64/x86_64
          URL_TAR="$(jq -r '.assets[] |
              select((.name|test("extended";"i")) and
                     (.name|test("linux";"i")) and
                     (.name|test("(amd64|x86_64)";"i")) and
                     (.name|endswith(".tar.gz"))) |
              .browser_download_url' /tmp/hugo.json | head -n1 || true)"

          URL_DEB="$(jq -r '.assets[] |
              select((.name|test("extended";"i")) and
                     (.name|test("linux";"i")) and
                     (.name|test("(amd64|x86_64)";"i")) and
                     (.name|endswith(".deb"))) |
              .browser_download_url' /tmp/hugo.json | head -n1 || true)"

          if [ -n "${URL_TAR}" ] && [ "${URL_TAR}" != "null" ]; then
            echo "Downloading tarball: ${URL_TAR}"
            curl -fLsS -o /tmp/hugo.tar.gz "${URL_TAR}"
            # 校验归档
            tar -tzf /tmp/hugo.tar.gz >/dev/null
            tar -xzf /tmp/hugo.tar.gz -C /tmp
            # 归档里会有 hugo 可执行文件
            if [ ! -f /tmp/hugo ]; then
              # 某些版本会解到子目录
              HUGO_PATH="$(tar -tzf /tmp/hugo.tar.gz | grep -E '/?hugo$' | head -n1 | xargs -I{} sh -c 'echo /tmp/$(dirname "{}")/hugo' || true)"
              if [ -f "${HUGO_PATH}" ]; then
                sudo install -m 0755 "${HUGO_PATH}" /usr/local/bin/hugo
              else
                echo "Cannot locate hugo binary in tarball."
                exit 1
              fi
            else
              sudo install -m 0755 /tmp/hugo /usr/local/bin/hugo
            fi
          elif [ -n "${URL_DEB}" ] && [ "${URL_DEB}" != "null" ]; then
            echo "Downloading deb: ${URL_DEB}"
            curl -fLsS -o /tmp/hugo.deb "${URL_DEB}"
            sudo dpkg -i /tmp/hugo.deb
          else
            echo "No suitable linux amd64 extended asset found for v${VER}."
            echo "Available assets:"
            jq -r '.assets[].name' /tmp/hugo.json
            exit 1
          fi

          echo "Hugo installed:"
          hugo version

      - name: Build
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
